%%% TIKZ %%%

\newcommand{\randistr}[3]{
	
	\foreach \i in {1,...,#3}{
		\filldraw [red] (rnd*#1,rnd*#2) circle (1pt) node [anchor=west]{};
		
	}
}

\newcommand{\exdistr}[3]{
	\filldraw [red] (0.3*#1,0.3*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.05*#1,0.6*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.4*#1,0.8*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.9*#1,0.4*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.2*#1,0.1*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.6*#1,0.4*#2) circle (#3pt) node [anchor=west]{};
	\filldraw [red] (0.76*#1,0.81*#2) circle (#3pt) node [anchor=west]{};
}

\newcommand{\cutoffdistr}[3]{
	\filldraw [red] (0.2*#1,0.5*#2) circle (#3pt) node [anchor=west]{};
	\node[yshift=0.3cm, xshift=-0.7cm] at (0.2*#1,0.5*#2) {$particle_0$};
	
	\filldraw [red] (0.5*#1,0.2*#2) circle (#3pt) node [anchor=west]{};
	\node[yshift=0.3cm, xshift=-0.7cm] at (0.5*#1,0.2*#2) {$particle_1$};
	
	\filldraw [red] (0.5*#1,0.8*#2) circle (#3pt) node [anchor=west]{};
	\node[yshift=0.3cm, xshift=-0.7cm] at (0.5*#1,0.8*#2) {$particle_2$};
	
	\filldraw [red] (0.8*#1,0.5*#2) circle (#3pt) node [anchor=west]{};
	\node[yshift=0.3cm, xshift=-0.7cm] at (0.8*#1,0.5*#2) {$particle_3$};
}

% From: https://www.martin-demling.de/2011/06/memory-maps-in-latex-using-the-bytefield-package/
\newcommand{\memsection}[4]{
	\bytefieldsetup{bitheight=#3\baselineskip}	% define the height of the memsection
	\bitbox[]{8}{
		\texttt{\uppercase{#1}}	 % print end address
		\\ \vspace{#3\baselineskip} \vspace{-2\baselineskip} \vspace{-#3pt} % do some spacing
		\texttt{\uppercase{#2}} % print start address
	}
	\bitbox{16}{#4} % print box with caption
}

%%% Parallel Processing Diagrams %%%

% text, x start, x end, y pos
\newcommand{\communication}[4]{
	\node[rectangle,
	draw = black,
	text = black,
	anchor = west,
	fill = white,
	align=center,
	minimum width = #3 cm - #2 cm, 
	minimum height = 0.5cm] (r) at (#2 cm - 0.5 cm,#4) {#1};
}

% text, x pos, y pos
\newcommand{\process}[3]{
	\node[rectangle,
	draw = black,
	text = black,
	anchor = west,
	fill = white,
	align=center,
	rotate=-90,
	minimum width = 2 cm, 
	minimum height = 0.5cm] (r) at (#2,#3) {#1};
}

% x size, y size, number of worker threads
\newcommand{\timeline}[3] {
	\draw [dashed](-2cm ,#2 cm) -- (#1 cm,#2 cm);
	\node[xshift=-0.3cm] at (- 2cm, #2 cm) {$t_0$};
	
	\draw [dashed](- 2cm ,0cm) -- (#1 cm,0cm);
	\node[xshift=-0.3cm] at (-2cm, 0 cm) {$t_n$};
	 
	\foreach \i in {0,...,#3}
	{
		\draw [line width=0.3mm, -stealth](#1 cm / #3 cm * \i cm,#2 cm) -- (#1 cm / #3 cm * \i cm,0 cm);
		\node[yshift=0.5cm] at (#1 cm / #3 cm * \i cm,#2 cm) {p\i};
	}
}

\newcommand{\parallelloop}[5]{
	\draw [line width=0.5mm](#1 cm, #2 cm) -- (#3 cm, #2 cm);
	\draw [line width=0.5mm](#3 cm, #2 cm) -- (#3 cm, #4 cm);
	\draw [line width=0.5mm](#3 cm, #4 cm) -- (#1 cm, #4 cm);
	\draw [line width=0.5mm, -stealth](#1 cm, #4 cm) -- (#1 cm, #2 cm);
	
	\node[xshift=0.3cm,  rotate=-90] at (#3 cm , #2 cm - 2cm) {#5};
	
}

%%% OTHER %%
\newcommand{\TODO}[1]{
\color{red}
\textbf{TODO:} #1
\color{black}
}

\newcommand{\Q}[1]{
	\color{green}
	\textbf{TODO:} #1
	\color{black}
}